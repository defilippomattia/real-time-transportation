version: "3.9"
services:
  # producer:
  #   container_name: producer
  #   build:
  #     context: ./producer
  #   ports:
  #    - "8080:8081"
  #   depends_on:
  #     kafka:
  #       condition: service_healthy
 

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    # healthcheck:
    #   test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "host.docker.internal:29092"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
  

  # mongoex:
  #   image: mongo-express
  #   environment:
  #   - ME_CONFIG_OPTIONS_EDITORTHEME=ambiance
  #   - ME_CONFIG_MONGODB_SERVER=database
  #   - ME_CONFIG_MONGODB_PORT=27017
  #   - ME_CONFIG_MONGODB_ENABLE_ADMIN=false
  #   - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
  #   ports:
  #   - "8081:8081"
  #   links:
  #   - database
  # database:
  #   image: mongo:latest
  #   ports:
  #     - "27017:27017"

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: userdrumre
      MONGO_INITDB_ROOT_PASSWORD: passdrumre

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: userdrumre
      ME_CONFIG_MONGODB_ADMINPASSWORD: passdrumre
      ME_CONFIG_MONGODB_URL: mongodb://userdrumre:passdrumre@mongo:27017/